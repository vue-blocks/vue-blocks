{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "login2",
  "type": "registry:block",
  "title": "login",
  "dependencies": [
    "lucide-vue-next"
  ],
  "registryDependencies": [
    "button",
    "input"
  ],
  "files": [
    {
      "path": "app/registry/blocks/login/login2/Login2.vue",
      "content": "<template>\n    <section class=\"py-20\">\n        <div class=\"container\">\n            <div class=\"flex flex-col gap-4\">\n                <div class=\"mx-auto w-full max-w-sm rounded-md p-6 shadow-lg\">\n                    <div class=\"mb-6 flex flex-col items-center\">\n                        <img\n                            src=\"/logo.svg\"\n                            class=\"mb-4 h-10 w-auto\"\n                            alt=\"vue blocks\"\n                        >\n                        <p class=\"mb-2 text-2xl font-bold\">\n                            Vue Blocks\n                        </p>\n                        <p class=\"text-muted-foreground\">\n                            Register in less than 2 minutes.\n                        </p>\n                    </div>\n                    <form\n                        class=\"space-y-4\"\n                        @submit.prevent=\"handleSubmit\"\n                    >\n                        <div class=\"grid gap-4\">\n                            <div class=\"space-y-2\">\n                                <Input\n                                    v-model=\"formData.name\"\n                                    type=\"text\"\n                                    placeholder=\"Your Name\"\n                                    required\n                                    :disabled=\"isLoading\"\n                                    :class=\"{ 'border-red-500': errors.name }\"\n                                />\n                                <p\n                                    v-if=\"errors.name\"\n                                    class=\"text-sm text-red-500\"\n                                >\n                                    {{ errors.name }}\n                                </p>\n                            </div>\n\n                            <div class=\"space-y-2\">\n                                <Input\n                                    v-model=\"formData.email\"\n                                    type=\"email\"\n                                    placeholder=\"Your Email\"\n                                    required\n                                    :disabled=\"isLoading\"\n                                    :class=\"{ 'border-red-500': errors.email }\"\n                                />\n                                <p\n                                    v-if=\"errors.email\"\n                                    class=\"text-sm text-red-500\"\n                                >\n                                    {{ errors.email }}\n                                </p>\n                            </div>\n\n                            <div class=\"space-y-2\">\n                                <div class=\"relative\">\n                                    <Input\n                                        v-model=\"formData.password\"\n                                        :type=\"showPassword ? 'text' : 'password'\"\n                                        placeholder=\"Your Password\"\n                                        required\n                                        :disabled=\"isLoading\"\n                                        :class=\"{ 'border-red-500': errors.password }\"\n                                    />\n                                    <button\n                                        type=\"button\"\n                                        class=\"absolute right-3 top-1/2 -translate-y-1/2\"\n                                        :disabled=\"isLoading\"\n                                        @click=\"showPassword = !showPassword\"\n                                    >\n                                        <Eye\n                                            v-if=\"!showPassword\"\n                                            class=\"size-4 text-muted-foreground\"\n                                        />\n                                        <EyeOff\n                                            v-else\n                                            class=\"size-4 text-muted-foreground\"\n                                        />\n                                    </button>\n                                </div>\n                                <div class=\"space-y-1\">\n                                    <p class=\"text-sm text-muted-foreground\">\n                                        Password requirements:\n                                    </p>\n                                    <ul class=\"text-sm space-y-1\">\n                                        <li :class=\"passwordChecks.length ? 'text-green-500' : 'text-muted-foreground'\">\n                                            <span class=\"inline-block w-4\">{{ passwordChecks.length ? '✓' : '•' }}</span>\n                                            Minimum 8 characters\n                                        </li>\n                                        <li :class=\"passwordChecks.hasUpperCase ? 'text-green-500' : 'text-muted-foreground'\">\n                                            <span class=\"inline-block w-4\">{{ passwordChecks.hasUpperCase ? '✓' : '•' }}</span>\n                                            At least one uppercase letter\n                                        </li>\n                                        <li :class=\"passwordChecks.hasNumber ? 'text-green-500' : 'text-muted-foreground'\">\n                                            <span class=\"inline-block w-4\">{{ passwordChecks.hasNumber ? '✓' : '•' }}</span>\n                                            At least one number\n                                        </li>\n                                    </ul>\n                                </div>\n                                <p\n                                    v-if=\"errors.password\"\n                                    class=\"text-sm text-red-500\"\n                                >\n                                    {{ errors.password }}\n                                </p>\n                            </div>\n\n                            <Button\n                                type=\"submit\"\n                                class=\"mt-2 w-full group\"\n                                :disabled=\"isLoading\"\n                            >\n                                <span\n                                    v-if=\"!isLoading\"\n                                    class=\"group-hover:translate-x-0.5 transition-transform\"\n                                >\n                                    Create Account\n                                </span>\n                                <span\n                                    v-else\n                                    class=\"flex items-center justify-center\"\n                                >\n                                    <Loader2 class=\"mr-2 size-4 animate-spin\" />\n                                    Creating...\n                                </span>\n                                <ArrowRight\n                                    v-if=\"!isLoading\"\n                                    class=\"ml-2 size-4 group-hover:translate-x-1 transition-transform\"\n                                />\n                            </Button>\n\n                            <Button\n                                variant=\"outline\"\n                                class=\"w-full group\"\n                                :disabled=\"isLoading\"\n                                @click=\"signInWithGoogle\"\n                            >\n                                <img\n                                    src=\"https://www.google.com/favicon.ico\"\n                                    alt=\"Google Logo\"\n                                    class=\"mr-2 size-5\"\n                                >\n                                <span class=\"group-hover:translate-x-0.5 transition-transform\">\n                                    Sign in with Google\n                                </span>\n                            </Button>\n                        </div>\n                    </form>\n                    <div class=\"mx-auto mt-8 flex justify-center gap-1 text-sm text-muted-foreground\">\n                        <p>Already registered?</p>\n                        <a\n                            href=\"#\"\n                            class=\"font-medium text-primary hover:text-primary/80 transition-colors\"\n                        >\n                            Sign in\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, reactive, computed } from 'vue'\nimport { Eye, EyeOff, ArrowRight, Loader2 } from 'lucide-vue-next'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\n\nconst showPassword = ref(false)\nconst isLoading = ref(false)\n\nconst name = ref('John Doe')\nconst email = ref('user@vue-blocks.dev')\nconst password = ref('123456789')\n\nconst formData = reactive({\n    name: name.value,\n    email: email.value,\n    password: password.value,\n})\n\nconst errors = reactive({\n    name: '',\n    email: '',\n    password: '',\n})\n\nconst passwordChecks = computed(() => ({\n    length: formData.password.length >= 8,\n    hasUpperCase: /[A-Z]/.test(formData.password),\n    hasNumber: /[0-9]/.test(formData.password),\n}))\n\nconst validateForm = () => {\n    let isValid = true\n\n    // Name validation\n    if (!formData.name) {\n        errors.name = 'Please enter your name'\n        isValid = false\n    }\n    else if (formData.name.length < 2) {\n        errors.name = 'Name must be at least 2 characters long'\n        isValid = false\n    }\n    else {\n        errors.name = ''\n    }\n\n    // Email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    if (!formData.email) {\n        errors.email = 'Please enter your email address'\n        isValid = false\n    }\n    else if (!emailRegex.test(formData.email)) {\n        errors.email = 'Please enter a valid email address'\n        isValid = false\n    }\n    else {\n        errors.email = ''\n    }\n\n    // Password validation\n    if (!formData.password) {\n        errors.password = 'Please enter a password'\n        isValid = false\n    }\n    else if (!passwordChecks.value.length) {\n        errors.password = 'Password must be at least 8 characters long'\n        isValid = false\n    }\n    else if (!passwordChecks.value.hasUpperCase) {\n        errors.password = 'Password must contain at least one uppercase letter'\n        isValid = false\n    }\n    else if (!passwordChecks.value.hasNumber) {\n        errors.password = 'Password must contain at least one number'\n        isValid = false\n    }\n    else {\n        errors.password = ''\n    }\n\n    return isValid\n}\n\nconst handleSubmit = async () => {\n    if (validateForm()) {\n        try {\n            isLoading.value = true\n            // Simulate API call\n            await new Promise(resolve => setTimeout(resolve, 1500))\n            console.log('Form submitted:', formData)\n            // Reset form after successful submission\n            Object.assign(formData, {\n                name: '',\n                email: '',\n                password: '',\n            })\n        }\n        catch (error) {\n            console.error('Registration error:', error)\n        }\n        finally {\n            isLoading.value = false\n        }\n    }\n}\n\nconst signInWithGoogle = async () => {\n    try {\n        isLoading.value = true\n        // Simulate Google OAuth integration\n        await new Promise(resolve => setTimeout(resolve, 1000))\n        console.log('Sign in with Google clicked')\n    }\n    catch (error) {\n        console.error('Google sign-in error:', error)\n    }\n    finally {\n        isLoading.value = false\n    }\n}\n</script>\n",
      "type": "registry:block"
    }
  ]
}
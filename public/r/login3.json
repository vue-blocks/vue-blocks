{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "login3",
  "type": "registry:block",
  "title": "login",
  "dependencies": [
    "lucide-vue-next"
  ],
  "registryDependencies": [
    "button",
    "input",
    "label"
  ],
  "files": [
    {
      "path": "app/registry/blocks/login/login3/Login3.vue",
      "content": "<template>\n    <section class=\"relative w-full flex items-center bg-white py-8 md:py-16 lg:py-24\">\n        <div class=\"container mx-auto px-4 md:px-6 lg:px-8\">\n            <div class=\"max-w-md mx-auto space-y-8\">\n                <div class=\"text-center space-y-2\">\n                    <h1 class=\"text-3xl font-bold\">\n                        Create an account\n                    </h1>\n                    <p class=\"text-gray-500\">\n                        Sign up to get started with our platform\n                    </p>\n                </div>\n\n                <div class=\"grid grid-cols-2 gap-4\">\n                    <Button\n                        variant=\"outline\"\n                        class=\"w-full\"\n                        @click=\"handleSocialLogin('github')\"\n                    >\n                        <GithubIcon class=\"mr-2 h-4 w-4\" />\n                        GitHub\n                    </Button>\n                    <Button\n                        variant=\"outline\"\n                        class=\"w-full\"\n                        @click=\"handleSocialLogin('twitter')\"\n                    >\n                        <TwitterIcon class=\"mr-2 h-4 w-4\" />\n                        Twitter\n                    </Button>\n                </div>\n\n                <div class=\"relative\">\n                    <div class=\"absolute inset-0 flex items-center\">\n                        <span class=\"w-full border-t\" />\n                    </div>\n                    <div class=\"relative flex justify-center text-xs uppercase\">\n                        <span class=\"bg-white px-2 text-gray-500\">Or continue with</span>\n                    </div>\n                </div>\n\n                <form\n                    class=\"space-y-6\"\n                    @submit.prevent=\"handleSubmit\"\n                >\n                    <div class=\"space-y-4\">\n                        <div class=\"space-y-2\">\n                            <Label for=\"name\">Full Name</Label>\n                            <div class=\"relative\">\n                                <UserIcon class=\"absolute left-3 top-3 h-5 w-5 text-gray-400\" />\n                                <Input\n                                    id=\"name\"\n                                    v-model=\"formData.name\"\n                                    type=\"text\"\n                                    placeholder=\"John Doe\"\n                                    :class=\"{ 'border-destructive': errors.name }\"\n                                    class=\"pl-10\"\n                                    required\n                                />\n                            </div>\n                            <p\n                                v-if=\"errors.name\"\n                                class=\"text-sm text-destructive\"\n                            >\n                                {{ errors.name }}\n                            </p>\n                        </div>\n\n                        <div class=\"space-y-2\">\n                            <Label for=\"email\">Email</Label>\n                            <div class=\"relative\">\n                                <MailIcon class=\"absolute left-3 top-3 h-5 w-5 text-gray-400\" />\n                                <Input\n                                    id=\"email\"\n                                    v-model=\"formData.email\"\n                                    type=\"email\"\n                                    placeholder=\"john@example.com\"\n                                    :class=\"{ 'border-destructive': errors.email }\"\n                                    class=\"pl-10\"\n                                    required\n                                />\n                            </div>\n                            <p\n                                v-if=\"errors.email\"\n                                class=\"text-sm text-destructive\"\n                            >\n                                {{ errors.email }}\n                            </p>\n                        </div>\n\n                        <div class=\"space-y-2\">\n                            <Label for=\"password\">Password</Label>\n                            <div class=\"relative\">\n                                <LockIcon class=\"absolute left-3 top-3 h-5 w-5 text-gray-400\" />\n                                <Input\n                                    id=\"password\"\n                                    v-model=\"formData.password\"\n                                    type=\"password\"\n                                    placeholder=\"Create a password\"\n                                    :class=\"{ 'border-destructive': errors.password }\"\n                                    class=\"pl-10\"\n                                    required\n                                />\n                            </div>\n                            <p\n                                v-if=\"errors.password\"\n                                class=\"text-sm text-destructive\"\n                            >\n                                {{ errors.password }}\n                            </p>\n                        </div>\n\n                        <div class=\"space-y-2\">\n                            <Label for=\"confirm-password\">Confirm Password</Label>\n                            <div class=\"relative\">\n                                <LockIcon class=\"absolute left-3 top-3 h-5 w-5 text-gray-400\" />\n                                <Input\n                                    id=\"confirm-password\"\n                                    v-model=\"formData.confirmPassword\"\n                                    type=\"password\"\n                                    placeholder=\"Confirm your password\"\n                                    :class=\"{ 'border-destructive': errors.confirmPassword }\"\n                                    class=\"pl-10\"\n                                    required\n                                />\n                            </div>\n                            <p\n                                v-if=\"errors.confirmPassword\"\n                                class=\"text-sm text-destructive\"\n                            >\n                                {{ errors.confirmPassword }}\n                            </p>\n                        </div>\n                    </div>\n\n                    <Button\n                        type=\"submit\"\n                        class=\"w-full\"\n                        :disabled=\"isLoading\"\n                    >\n                        <template v-if=\"isLoading\">\n                            <Loader2 class=\"mr-2 h-4 w-4 animate-spin\" />\n                            Please wait\n                        </template>\n                        <template v-else>\n                            Create Account\n                        </template>\n                    </Button>\n\n                    <p class=\"text-center text-sm text-gray-500\">\n                        Already have an account?\n                        <a\n                            href=\"#\"\n                            class=\"text-blue-600 hover:underline\"\n                        >Sign in</a>\n                    </p>\n                </form>\n            </div>\n        </div>\n    </section>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, reactive } from 'vue'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport {\n    UserIcon,\n    MailIcon,\n    LockIcon,\n    GithubIcon,\n    TwitterIcon,\n    Loader2,\n} from 'lucide-vue-next'\n\nconst name = ref('john Doe')\nconst email = ref('user@vue-blocks.dev')\nconst password = ref('123456789')\nconst confirmPassword = ref('123456789')\n\nconst formData = reactive({\n    name: name.value,\n    email: email.value,\n    password: password.value,\n    confirmPassword: confirmPassword.value,\n})\n\nconst errors = reactive({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n})\n\nconst isLoading = ref(false)\n\nconst validateForm = () => {\n    let isValid = true\n\n    // Reset errors\n    errors.name = ''\n    errors.email = ''\n    errors.password = ''\n    errors.confirmPassword = ''\n\n    // Name validation\n    if (!formData.name) {\n        errors.name = 'Name is required'\n        isValid = false\n    }\n\n    // Email validation\n    if (!formData.email) {\n        errors.email = 'Email is required'\n        isValid = false\n    }\n    else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n        errors.email = 'Please enter a valid email address'\n        isValid = false\n    }\n\n    // Password validation\n    if (!formData.password) {\n        errors.password = 'Password is required'\n        isValid = false\n    }\n    else if (formData.password.length < 8) {\n        errors.password = 'Password must be at least 8 characters long'\n        isValid = false\n    }\n\n    // Confirm Password validation\n    if (!formData.confirmPassword) {\n        errors.confirmPassword = 'Confirm Password is required'\n        isValid = false\n    }\n    else if (formData.confirmPassword !== formData.password) {\n        errors.confirmPassword = 'Passwords do not match'\n        isValid = false\n    }\n\n    return isValid\n}\n\nconst handleSubmit = async () => {\n    if (validateForm()) {\n        try {\n            isLoading.value = true\n            // Simulate API call\n            await new Promise(resolve => setTimeout(resolve, 2000))\n\n            console.log({\n                name: formData.name,\n                email: formData.email,\n                password: formData.password,\n                confirmPassword: formData.confirmPassword,\n            })\n        }\n        catch (error) {\n            console.error('Registration error:', error)\n        }\n        finally {\n            isLoading.value = false\n        }\n    }\n}\n\nconst handleSocialLogin = (provider: string) => {\n    console.log(`Login with ${provider}`)\n}\n</script>\n",
      "type": "registry:block"
    }
  ]
}